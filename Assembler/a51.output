Terminals unused in grammar

    AREG
    USING


State 198 conflicts: 1 shift/reduce


Grammar

    0 $accept: stmt_seq $end

    1 stmt_seq: stmt
    2         | stmt_seq stmt

    3 stmt: inst_stmt
    4     | direct_stmt

    5 direct_stmt: label
    6            | org
    7            | align
    8            | even
    9            | equ
   10            | seg_stmt
   11            | res_stmt
   12            | init_stmt
   13            | end_stmt

   14 inst_stmt: acall_stmt
   15          | add_stmt
   16          | addc_stmt
   17          | ajmp_stmt
   18          | anl_stmt
   19          | cjne_stmt
   20          | clr_stmt
   21          | cpl_stmt
   22          | da_stmt
   23          | dec_stmt
   24          | div_stmt
   25          | djnz_stmt
   26          | inc_stmt
   27          | jb_stmt
   28          | jbc_stmt
   29          | jc_stmt
   30          | jmp_stmt
   31          | jnb_stmt
   32          | jnc_stmt
   33          | jnz_stmt
   34          | jz_stmt
   35          | lcall_stmt
   36          | ljmp_stmt
   37          | mul_stmt
   38          | nop_stmt
   39          | orl_stmt
   40          | pop_stmt
   41          | push_stmt
   42          | ret_stmt
   43          | reti_stmt
   44          | rl_stmt
   45          | rlc_stmt
   46          | rr_stmt
   47          | rrc_stmt
   48          | setb_stmt
   49          | sjmp_stmt
   50          | subb_stmt
   51          | swap_stmt
   52          | xch_stmt
   53          | xchd_stmt
   54          | xrl_stmt
   55          | mov_stmt
   56          | movc_stmt

   57 acall_stmt: ACALL IDENTIFIER

   58 add_stmt: ADD A COMMA REG
   59         | ADD A COMMA dir
   60         | ADD A COMMA AT_SIGN REG
   61         | ADD A COMMA HASH_TAG exp

   62 addc_stmt: ADDC A COMMA REG
   63          | ADDC A COMMA dir
   64          | ADDC A COMMA AT_SIGN REG
   65          | ADDC A COMMA HASH_TAG exp

   66 ajmp_stmt: AJMP IDENTIFIER

   67 anl_stmt: ANL A COMMA REG
   68         | ANL A COMMA dir
   69         | ANL A COMMA AT_SIGN REG
   70         | ANL A COMMA HASH_TAG exp
   71         | ANL dir COMMA A
   72         | ANL dir COMMA HASH_TAG exp
   73         | ANL C COMMA bit
   74         | ANL C COMMA DIVISION bit

   75 cjne_stmt: CJNE A COMMA dir COMMA IDENTIFIER
   76          | CJNE A COMMA HASH_TAG exp COMMA IDENTIFIER
   77          | CJNE REG COMMA HASH_TAG exp COMMA IDENTIFIER
   78          | CJNE AT_SIGN REG COMMA HASH_TAG exp COMMA IDENTIFIER

   79 clr_stmt: CLR A
   80         | CLR C
   81         | CLR bit

   82 cpl_stmt: CPL A
   83         | CPL C
   84         | CPL bit

   85 da_stmt: DA A

   86 dec_stmt: DEC A
   87         | DEC REG
   88         | DEC dir
   89         | DEC AT_SIGN REG

   90 div_stmt: DIV AB

   91 djnz_stmt: DJNZ REG COMMA IDENTIFIER
   92          | DJNZ dir COMMA IDENTIFIER

   93 inc_stmt: INC A
   94         | INC REG
   95         | INC dir
   96         | INC AT_SIGN REG
   97         | INC DPTR

   98 jb_stmt: JB bit COMMA IDENTIFIER

   99 jbc_stmt: JBC bit COMMA IDENTIFIER

  100 jc_stmt: JC IDENTIFIER

  101 jmp_stmt: JMP AT_SIGN A SUM DPTR

  102 jnb_stmt: JNB bit COMMA IDENTIFIER

  103 jnc_stmt: JNC IDENTIFIER

  104 jnz_stmt: JNZ IDENTIFIER

  105 jz_stmt: JZ IDENTIFIER

  106 lcall_stmt: LCALL IDENTIFIER

  107 ljmp_stmt: LJMP IDENTIFIER

  108 mov_stmt: MOV A COMMA REG
  109         | MOV A COMMA dir
  110         | MOV A COMMA AT_SIGN REG
  111         | MOV A COMMA HASH_TAG exp
  112         | MOV REG COMMA A
  113         | MOV REG COMMA dir
  114         | MOV REG COMMA HASH_TAG exp
  115         | MOV dir COMMA A
  116         | MOV dir COMMA REG
  117         | MOV dir COMMA dir
  118         | MOV dir COMMA AT_SIGN REG
  119         | MOV dir COMMA HASH_TAG exp
  120         | MOV AT_SIGN REG COMMA A
  121         | MOV AT_SIGN REG COMMA dir
  122         | MOV AT_SIGN REG COMMA HASH_TAG exp
  123         | MOV C COMMA bit
  124         | MOV bit COMMA C
  125         | MOV DPTR COMMA HASH_TAG exp

  126 movc_stmt: MOVC A COMMA AT_SIGN A SUM DPTR
  127          | MOVC A COMMA AT_SIGN A SUM PC

  128 mul_stmt: MUL AB

  129 nop_stmt: NOP

  130 orl_stmt: ORL A COMMA REG
  131         | ORL A COMMA dir
  132         | ORL A COMMA AT_SIGN REG
  133         | ORL A COMMA HASH_TAG exp
  134         | ORL dir COMMA A
  135         | ORL dir COMMA HASH_TAG exp
  136         | ORL C COMMA bit
  137         | ORL C COMMA DIVISION bit

  138 pop_stmt: POP dir

  139 push_stmt: PUSH dir

  140 ret_stmt: RET

  141 reti_stmt: RETI

  142 rl_stmt: RL A

  143 rlc_stmt: RLC A

  144 rr_stmt: RR A

  145 rrc_stmt: RRC A

  146 setb_stmt: SETB C
  147          | SETB bit

  148 sjmp_stmt: SJMP IDENTIFIER

  149 subb_stmt: SUBB A COMMA REG
  150          | SUBB A COMMA dir
  151          | SUBB A COMMA AT_SIGN REG
  152          | SUBB A COMMA HASH_TAG exp

  153 swap_stmt: SWAP A

  154 xch_stmt: XCH A COMMA REG
  155         | XCH A COMMA dir
  156         | XCH A COMMA AT_SIGN REG

  157 xchd_stmt: XCHD A COMMA AT_SIGN REG

  158 xrl_stmt: XRL A COMMA REG
  159         | XRL A COMMA dir
  160         | XRL A COMMA AT_SIGN REG
  161         | XRL A COMMA HASH_TAG exp
  162         | XRL dir COMMA A
  163         | XRL dir COMMA HASH_TAG exp

  164 $@1: Îµ

  165 res_stmt: DS exp $@1 DBIT exp

  166 init_stmt: DB init_seq
  167          | DW init_seq
  168          | DD init_seq

  169 init_seq: init_el
  170         | init_seq COMMA init_el

  171 init_el: STRING
  172        | NUMBER

  173 seg_stmt: SEG
  174         | SEG AT NUMBER
  175         | SEG AT RAM_BIT_ADDRESS

  176 end_stmt: END

  177 label: IDENTIFIER TWO_DOTS
  178      | IDENTIFIER TWO_DOTS seg_stmt

  179 org: ORG exp

  180 align: ALIGN exp

  181 even: EVEN

  182 equ: IDENTIFIER EQU exp
  183    | IDENTIFIER EQU SFR

  184 exp: exp LT simple_exp
  185    | exp MT simple_exp
  186    | exp EQ simple_exp
  187    | simple_exp

  188 simple_exp: simple_exp SUM term
  189           | simple_exp MINUS term
  190           | term

  191 term: term MULTIPLY factor
  192     | term DIVISION factor
  193     | term MODULE factor
  194     | term SHIFT_R factor
  195     | term SHIFT_L factor
  196     | factor

  197 factor: OP_PAR exp CL_PAR
  198       | NUMBER
  199       | IDENTIFIER
  200       | error

  201 dir: SFR
  202    | B
  203    | exp

  204 bit: RAM_BIT_ADDRESS
  205    | SFR_BIT_ADDRESS


Terminals, with rules where they appear

    $end (0) 0
    error (256) 200
    ACALL <num> (258) 57
    ADD <num> (259) 58 59 60 61
    ADDC <num> (260) 62 63 64 65
    AJMP <num> (261) 66
    ANL <num> (262) 67 68 69 70 71 72 73 74
    CJNE <num> (263) 75 76 77 78
    CLR <num> (264) 79 80 81
    CPL <num> (265) 82 83 84
    DA <num> (266) 85
    DEC <num> (267) 86 87 88 89
    DIV <num> (268) 90
    DJNZ <num> (269) 91 92
    INC <num> (270) 93 94 95 96 97
    JB <num> (271) 98
    JBC <num> (272) 99
    JC <num> (273) 100
    JMP <num> (274) 101
    JNB <num> (275) 102
    JNC <num> (276) 103
    JNZ <num> (277) 104
    JZ <num> (278) 105
    LCALL <num> (279) 106
    LJMP <num> (280) 107
    MOV <num> (281) 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
    MOVC <num> (282) 126 127
    MUL <num> (283) 128
    NOP <num> (284) 129
    ORL <num> (285) 130 131 132 133 134 135 136 137
    POP <num> (286) 138
    PUSH <num> (287) 139
    RET <num> (288) 140
    RETI <num> (289) 141
    RL <num> (290) 142
    RLC <num> (291) 143
    RR <num> (292) 144
    RRC <num> (293) 145
    SETB <num> (294) 146 147
    SJMP <num> (295) 148
    SUBB <num> (296) 149 150 151 152
    SWAP <num> (297) 153
    XCH <num> (298) 154 155 156
    XCHD <num> (299) 157
    XRL <num> (300) 158 159 160 161 162 163
    STRING <str> (301) 171
    SEG <segment> (302) 173 174 175
    AREG <num> (303)
    REG <num> (304) 58 60 62 64 67 69 77 78 87 89 91 94 96 108 110 112 113 114 116 118 120 121 122 130 132 149 151 154 156 157 158 160
    A <num> (305) 58 59 60 61 62 63 64 65 67 68 69 70 71 75 76 79 82 85 86 93 101 108 109 110 111 112 115 120 126 127 130 131 132 133 134 142 143 144 145 149 150 151 152 153 154 155 156 157 158 159 160 161 162
    C <num> (306) 73 74 80 83 123 124 136 137 146
    B <num> (307) 202
    PC <num> (308) 127
    SFR <num> (309) 183 201
    AB <num> (310) 90 128
    DPTR <num> (311) 97 101 125 126
    NUMBER <num> (312) 172 174 198
    RAM_BIT_ADDRESS <num> (313) 175 204
    SFR_BIT_ADDRESS <num> (314) 205
    COMMA (315) 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 74 75 76 77 78 91 92 98 99 102 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 130 131 132 133 134 135 136 137 149 150 151 152 154 155 156 157 158 159 160 161 162 163 170
    HASH_TAG (316) 61 65 70 72 76 77 78 111 114 119 122 125 133 135 152 161 163
    AT (317) 174 175
    AT_SIGN (318) 60 64 69 78 89 96 101 110 118 120 121 122 126 127 132 151 156 157 160
    TWO_DOTS (319) 177 178
    SUM (320) 101 126 127 188
    MINUS (321) 189
    MULTIPLY (322) 191
    MODULE (323) 193
    EQ (324) 186
    LT (325) 184
    MT (326) 185
    DIVISION (327) 74 137 192
    OP_PAR (328) 197
    CL_PAR (329) 197
    SHIFT_L (330) 195
    SHIFT_R (331) 194
    ALIGN (332) 180
    EVEN (333) 181
    ORG (334) 179
    EQU (335) 182 183
    USING (336)
    DB (337) 166
    DD (338) 168
    DW (339) 167
    DBIT (340) 165
    DS (341) 165
    END (342) 176
    IDENTIFIER <bucket> (343) 57 66 75 76 77 78 91 92 98 99 100 102 103 104 105 106 107 148 177 178 182 183 199


Nonterminals, with rules where they appear

    $accept (89)
        on left: 0
    stmt_seq (90)
        on left: 1 2
        on right: 0 2
    stmt (91)
        on left: 3 4
        on right: 1 2
    direct_stmt (92)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 4
    inst_stmt (93)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
        on right: 3
    acall_stmt (94)
        on left: 57
        on right: 14
    add_stmt (95)
        on left: 58 59 60 61
        on right: 15
    addc_stmt (96)
        on left: 62 63 64 65
        on right: 16
    ajmp_stmt (97)
        on left: 66
        on right: 17
    anl_stmt (98)
        on left: 67 68 69 70 71 72 73 74
        on right: 18
    cjne_stmt (99)
        on left: 75 76 77 78
        on right: 19
    clr_stmt (100)
        on left: 79 80 81
        on right: 20
    cpl_stmt (101)
        on left: 82 83 84
        on right: 21
    da_stmt (102)
        on left: 85
        on right: 22
    dec_stmt (103)
        on left: 86 87 88 89
        on right: 23
    div_stmt (104)
        on left: 90
        on right: 24
    djnz_stmt (105)
        on left: 91 92
        on right: 25
    inc_stmt (106)
        on left: 93 94 95 96 97
        on right: 26
    jb_stmt (107)
        on left: 98
        on right: 27
    jbc_stmt (108)
        on left: 99
        on right: 28
    jc_stmt (109)
        on left: 100
        on right: 29
    jmp_stmt (110)
        on left: 101
        on right: 30
    jnb_stmt (111)
        on left: 102
        on right: 31
    jnc_stmt (112)
        on left: 103
        on right: 32
    jnz_stmt (113)
        on left: 104
        on right: 33
    jz_stmt (114)
        on left: 105
        on right: 34
    lcall_stmt (115)
        on left: 106
        on right: 35
    ljmp_stmt (116)
        on left: 107
        on right: 36
    mov_stmt (117)
        on left: 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
        on right: 55
    movc_stmt (118)
        on left: 126 127
        on right: 56
    mul_stmt (119)
        on left: 128
        on right: 37
    nop_stmt (120)
        on left: 129
        on right: 38
    orl_stmt (121)
        on left: 130 131 132 133 134 135 136 137
        on right: 39
    pop_stmt (122)
        on left: 138
        on right: 40
    push_stmt (123)
        on left: 139
        on right: 41
    ret_stmt (124)
        on left: 140
        on right: 42
    reti_stmt (125)
        on left: 141
        on right: 43
    rl_stmt (126)
        on left: 142
        on right: 44
    rlc_stmt (127)
        on left: 143
        on right: 45
    rr_stmt (128)
        on left: 144
        on right: 46
    rrc_stmt (129)
        on left: 145
        on right: 47
    setb_stmt (130)
        on left: 146 147
        on right: 48
    sjmp_stmt (131)
        on left: 148
        on right: 49
    subb_stmt (132)
        on left: 149 150 151 152
        on right: 50
    swap_stmt (133)
        on left: 153
        on right: 51
    xch_stmt (134)
        on left: 154 155 156
        on right: 52
    xchd_stmt (135)
        on left: 157
        on right: 53
    xrl_stmt (136)
        on left: 158 159 160 161 162 163
        on right: 54
    res_stmt (137)
        on left: 165
        on right: 11
    $@1 (138)
        on left: 164
        on right: 165
    init_stmt (139)
        on left: 166 167 168
        on right: 12
    init_seq (140)
        on left: 169 170
        on right: 166 167 168 170
    init_el (141)
        on left: 171 172
        on right: 169 170
    seg_stmt <num> (142)
        on left: 173 174 175
        on right: 10 178
    end_stmt (143)
        on left: 176
        on right: 13
    label (144)
        on left: 177 178
        on right: 5
    org (145)
        on left: 179
        on right: 6
    align (146)
        on left: 180
        on right: 7
    even (147)
        on left: 181
        on right: 8
    equ (148)
        on left: 182 183
        on right: 9
    exp <num> (149)
        on left: 184 185 186 187
        on right: 61 65 70 72 76 77 78 111 114 119 122 125 133 135 152 161 163 165 179 180 182 184 185 186 197 203
    simple_exp <num> (150)
        on left: 188 189 190
        on right: 184 185 186 187 188 189
    term <num> (151)
        on left: 191 192 193 194 195 196
        on right: 188 189 190 191 192 193 194 195
    factor <num> (152)
        on left: 197 198 199 200
        on right: 191 192 193 194 195 196
    dir <num> (153)
        on left: 201 202 203
        on right: 59 63 68 71 72 75 88 92 95 109 113 115 116 117 118 119 121 131 134 135 138 139 150 155 159 162 163
    bit <num> (154)
        on left: 204 205
        on right: 73 74 81 84 98 99 102 123 124 136 137 147


State 0

    0 $accept: â¢ stmt_seq $end

    ACALL       shift, and go to state 1
    ADD         shift, and go to state 2
    ADDC        shift, and go to state 3
    AJMP        shift, and go to state 4
    ANL         shift, and go to state 5
    CJNE        shift, and go to state 6
    CLR         shift, and go to state 7
    CPL         shift, and go to state 8
    DA          shift, and go to state 9
    DEC         shift, and go to state 10
    DIV         shift, and go to state 11
    DJNZ        shift, and go to state 12
    INC         shift, and go to state 13
    JB          shift, and go to state 14
    JBC         shift, and go to state 15
    JC          shift, and go to state 16
    JMP         shift, and go to state 17
    JNB         shift, and go to state 18
    JNC         shift, and go to state 19
    JNZ         shift, and go to state 20
    JZ          shift, and go to state 21
    LCALL       shift, and go to state 22
    LJMP        shift, and go to state 23
    MOV         shift, and go to state 24
    MOVC        shift, and go to state 25
    MUL         shift, and go to state 26
    NOP         shift, and go to state 27
    ORL         shift, and go to state 28
    POP         shift, and go to state 29
    PUSH        shift, and go to state 30
    RET         shift, and go to state 31
    RETI        shift, and go to state 32
    RL          shift, and go to state 33
    RLC         shift, and go to state 34
    RR          shift, and go to state 35
    RRC         shift, and go to state 36
    SETB        shift, and go to state 37
    SJMP        shift, and go to state 38
    SUBB        shift, and go to state 39
    SWAP        shift, and go to state 40
    XCH         shift, and go to state 41
    XCHD        shift, and go to state 42
    XRL         shift, and go to state 43
    SEG         shift, and go to state 44
    ALIGN       shift, and go to state 45
    EVEN        shift, and go to state 46
    ORG         shift, and go to state 47
    DB          shift, and go to state 48
    DD          shift, and go to state 49
    DW          shift, and go to state 50
    DS          shift, and go to state 51
    END         shift, and go to state 52
    IDENTIFIER  shift, and go to state 53

    stmt_seq     go to state 54
    stmt         go to state 55
    direct_stmt  go to state 56
    inst_stmt    go to state 57
    acall_stmt   go to state 58
    add_stmt     go to state 59
    addc_stmt    go to state 60
    ajmp_stmt    go to state 61
    anl_stmt     go to state 62
    cjne_stmt    go to state 63
    clr_stmt     go to state 64
    cpl_stmt     go to state 65
    da_stmt      go to state 66
    dec_stmt     go to state 67
    div_stmt     go to state 68
    djnz_stmt    go to state 69
    inc_stmt     go to state 70
    jb_stmt      go to state 71
    jbc_stmt     go to state 72
    jc_stmt      go to state 73
    jmp_stmt     go to state 74
    jnb_stmt     go to state 75
    jnc_stmt     go to state 76
    jnz_stmt     go to state 77
    jz_stmt      go to state 78
    lcall_stmt   go to state 79
    ljmp_stmt    go to state 80
    mov_stmt     go to state 81
    movc_stmt    go to state 82
    mul_stmt     go to state 83
    nop_stmt     go to state 84
    orl_stmt     go to state 85
    pop_stmt     go to state 86
    push_stmt    go to state 87
    ret_stmt     go to state 88
    reti_stmt    go to state 89
    rl_stmt      go to state 90
    rlc_stmt     go to state 91
    rr_stmt      go to state 92
    rrc_stmt     go to state 93
    setb_stmt    go to state 94
    sjmp_stmt    go to state 95
    subb_stmt    go to state 96
    swap_stmt    go to state 97
    xch_stmt     go to state 98
    xchd_stmt    go to state 99
    xrl_stmt     go to state 100
    res_stmt     go to state 101
    init_stmt    go to state 102
    seg_stmt     go to state 103
    end_stmt     go to state 104
    label        go to state 105
    org          go to state 106
    align        go to state 107
    even         go to state 108
    equ          go to state 109


State 1

   57 acall_stmt: ACALL â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 110


State 2

   58 add_stmt: ADD â¢ A COMMA REG
   59         | ADD â¢ A COMMA dir
   60         | ADD â¢ A COMMA AT_SIGN REG
   61         | ADD â¢ A COMMA HASH_TAG exp

    A  shift, and go to state 111


State 3

   62 addc_stmt: ADDC â¢ A COMMA REG
   63          | ADDC â¢ A COMMA dir
   64          | ADDC â¢ A COMMA AT_SIGN REG
   65          | ADDC â¢ A COMMA HASH_TAG exp

    A  shift, and go to state 112


State 4

   66 ajmp_stmt: AJMP â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 113


State 5

   67 anl_stmt: ANL â¢ A COMMA REG
   68         | ANL â¢ A COMMA dir
   69         | ANL â¢ A COMMA AT_SIGN REG
   70         | ANL â¢ A COMMA HASH_TAG exp
   71         | ANL â¢ dir COMMA A
   72         | ANL â¢ dir COMMA HASH_TAG exp
   73         | ANL â¢ C COMMA bit
   74         | ANL â¢ C COMMA DIVISION bit

    error       shift, and go to state 114
    A           shift, and go to state 115
    C           shift, and go to state 116
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 126


State 6

   75 cjne_stmt: CJNE â¢ A COMMA dir COMMA IDENTIFIER
   76          | CJNE â¢ A COMMA HASH_TAG exp COMMA IDENTIFIER
   77          | CJNE â¢ REG COMMA HASH_TAG exp COMMA IDENTIFIER
   78          | CJNE â¢ AT_SIGN REG COMMA HASH_TAG exp COMMA IDENTIFIER

    REG      shift, and go to state 127
    A        shift, and go to state 128
    AT_SIGN  shift, and go to state 129


State 7

   79 clr_stmt: CLR â¢ A
   80         | CLR â¢ C
   81         | CLR â¢ bit

    A                shift, and go to state 130
    C                shift, and go to state 131
    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133

    bit  go to state 134


State 8

   82 cpl_stmt: CPL â¢ A
   83         | CPL â¢ C
   84         | CPL â¢ bit

    A                shift, and go to state 135
    C                shift, and go to state 136
    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133

    bit  go to state 137


State 9

   85 da_stmt: DA â¢ A

    A  shift, and go to state 138


State 10

   86 dec_stmt: DEC â¢ A
   87         | DEC â¢ REG
   88         | DEC â¢ dir
   89         | DEC â¢ AT_SIGN REG

    error       shift, and go to state 114
    REG         shift, and go to state 139
    A           shift, and go to state 140
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    AT_SIGN     shift, and go to state 141
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 142


State 11

   90 div_stmt: DIV â¢ AB

    AB  shift, and go to state 143


State 12

   91 djnz_stmt: DJNZ â¢ REG COMMA IDENTIFIER
   92          | DJNZ â¢ dir COMMA IDENTIFIER

    error       shift, and go to state 114
    REG         shift, and go to state 144
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 145


State 13

   93 inc_stmt: INC â¢ A
   94         | INC â¢ REG
   95         | INC â¢ dir
   96         | INC â¢ AT_SIGN REG
   97         | INC â¢ DPTR

    error       shift, and go to state 114
    REG         shift, and go to state 146
    A           shift, and go to state 147
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    DPTR        shift, and go to state 148
    NUMBER      shift, and go to state 119
    AT_SIGN     shift, and go to state 149
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 150


State 14

   98 jb_stmt: JB â¢ bit COMMA IDENTIFIER

    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133

    bit  go to state 151


State 15

   99 jbc_stmt: JBC â¢ bit COMMA IDENTIFIER

    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133

    bit  go to state 152


State 16

  100 jc_stmt: JC â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 153


State 17

  101 jmp_stmt: JMP â¢ AT_SIGN A SUM DPTR

    AT_SIGN  shift, and go to state 154


State 18

  102 jnb_stmt: JNB â¢ bit COMMA IDENTIFIER

    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133

    bit  go to state 155


State 19

  103 jnc_stmt: JNC â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 156


State 20

  104 jnz_stmt: JNZ â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 157


State 21

  105 jz_stmt: JZ â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 158


State 22

  106 lcall_stmt: LCALL â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 159


State 23

  107 ljmp_stmt: LJMP â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 160


State 24

  108 mov_stmt: MOV â¢ A COMMA REG
  109         | MOV â¢ A COMMA dir
  110         | MOV â¢ A COMMA AT_SIGN REG
  111         | MOV â¢ A COMMA HASH_TAG exp
  112         | MOV â¢ REG COMMA A
  113         | MOV â¢ REG COMMA dir
  114         | MOV â¢ REG COMMA HASH_TAG exp
  115         | MOV â¢ dir COMMA A
  116         | MOV â¢ dir COMMA REG
  117         | MOV â¢ dir COMMA dir
  118         | MOV â¢ dir COMMA AT_SIGN REG
  119         | MOV â¢ dir COMMA HASH_TAG exp
  120         | MOV â¢ AT_SIGN REG COMMA A
  121         | MOV â¢ AT_SIGN REG COMMA dir
  122         | MOV â¢ AT_SIGN REG COMMA HASH_TAG exp
  123         | MOV â¢ C COMMA bit
  124         | MOV â¢ bit COMMA C
  125         | MOV â¢ DPTR COMMA HASH_TAG exp

    error            shift, and go to state 114
    REG              shift, and go to state 161
    A                shift, and go to state 162
    C                shift, and go to state 163
    B                shift, and go to state 117
    SFR              shift, and go to state 118
    DPTR             shift, and go to state 164
    NUMBER           shift, and go to state 119
    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133
    AT_SIGN          shift, and go to state 165
    OP_PAR           shift, and go to state 120
    IDENTIFIER       shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 166
    bit         go to state 167


State 25

  126 movc_stmt: MOVC â¢ A COMMA AT_SIGN A SUM DPTR
  127          | MOVC â¢ A COMMA AT_SIGN A SUM PC

    A  shift, and go to state 168


State 26

  128 mul_stmt: MUL â¢ AB

    AB  shift, and go to state 169


State 27

  129 nop_stmt: NOP â¢

    $default  reduce using rule 129 (nop_stmt)


State 28

  130 orl_stmt: ORL â¢ A COMMA REG
  131         | ORL â¢ A COMMA dir
  132         | ORL â¢ A COMMA AT_SIGN REG
  133         | ORL â¢ A COMMA HASH_TAG exp
  134         | ORL â¢ dir COMMA A
  135         | ORL â¢ dir COMMA HASH_TAG exp
  136         | ORL â¢ C COMMA bit
  137         | ORL â¢ C COMMA DIVISION bit

    error       shift, and go to state 114
    A           shift, and go to state 170
    C           shift, and go to state 171
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 172


State 29

  138 pop_stmt: POP â¢ dir

    error       shift, and go to state 114
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 173


State 30

  139 push_stmt: PUSH â¢ dir

    error       shift, and go to state 114
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 174


State 31

  140 ret_stmt: RET â¢

    $default  reduce using rule 140 (ret_stmt)


State 32

  141 reti_stmt: RETI â¢

    $default  reduce using rule 141 (reti_stmt)


State 33

  142 rl_stmt: RL â¢ A

    A  shift, and go to state 175


State 34

  143 rlc_stmt: RLC â¢ A

    A  shift, and go to state 176


State 35

  144 rr_stmt: RR â¢ A

    A  shift, and go to state 177


State 36

  145 rrc_stmt: RRC â¢ A

    A  shift, and go to state 178


State 37

  146 setb_stmt: SETB â¢ C
  147          | SETB â¢ bit

    C                shift, and go to state 179
    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133

    bit  go to state 180


State 38

  148 sjmp_stmt: SJMP â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 181


State 39

  149 subb_stmt: SUBB â¢ A COMMA REG
  150          | SUBB â¢ A COMMA dir
  151          | SUBB â¢ A COMMA AT_SIGN REG
  152          | SUBB â¢ A COMMA HASH_TAG exp

    A  shift, and go to state 182


State 40

  153 swap_stmt: SWAP â¢ A

    A  shift, and go to state 183


State 41

  154 xch_stmt: XCH â¢ A COMMA REG
  155         | XCH â¢ A COMMA dir
  156         | XCH â¢ A COMMA AT_SIGN REG

    A  shift, and go to state 184


State 42

  157 xchd_stmt: XCHD â¢ A COMMA AT_SIGN REG

    A  shift, and go to state 185


State 43

  158 xrl_stmt: XRL â¢ A COMMA REG
  159         | XRL â¢ A COMMA dir
  160         | XRL â¢ A COMMA AT_SIGN REG
  161         | XRL â¢ A COMMA HASH_TAG exp
  162         | XRL â¢ dir COMMA A
  163         | XRL â¢ dir COMMA HASH_TAG exp

    error       shift, and go to state 114
    A           shift, and go to state 186
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 187


State 44

  173 seg_stmt: SEG â¢
  174         | SEG â¢ AT NUMBER
  175         | SEG â¢ AT RAM_BIT_ADDRESS

    AT  shift, and go to state 188

    $default  reduce using rule 173 (seg_stmt)


State 45

  180 align: ALIGN â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 189
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 46

  181 even: EVEN â¢

    $default  reduce using rule 181 (even)


State 47

  179 org: ORG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 190
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 48

  166 init_stmt: DB â¢ init_seq

    STRING  shift, and go to state 191
    NUMBER  shift, and go to state 192

    init_seq  go to state 193
    init_el   go to state 194


State 49

  168 init_stmt: DD â¢ init_seq

    STRING  shift, and go to state 191
    NUMBER  shift, and go to state 192

    init_seq  go to state 195
    init_el   go to state 194


State 50

  167 init_stmt: DW â¢ init_seq

    STRING  shift, and go to state 191
    NUMBER  shift, and go to state 192

    init_seq  go to state 196
    init_el   go to state 194


State 51

  165 res_stmt: DS â¢ exp $@1 DBIT exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 197
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 52

  176 end_stmt: END â¢

    $default  reduce using rule 176 (end_stmt)


State 53

  177 label: IDENTIFIER â¢ TWO_DOTS
  178      | IDENTIFIER â¢ TWO_DOTS seg_stmt
  182 equ: IDENTIFIER â¢ EQU exp
  183    | IDENTIFIER â¢ EQU SFR

    TWO_DOTS  shift, and go to state 198
    EQU       shift, and go to state 199


State 54

    0 $accept: stmt_seq â¢ $end
    2 stmt_seq: stmt_seq â¢ stmt

    $end        shift, and go to state 200
    ACALL       shift, and go to state 1
    ADD         shift, and go to state 2
    ADDC        shift, and go to state 3
    AJMP        shift, and go to state 4
    ANL         shift, and go to state 5
    CJNE        shift, and go to state 6
    CLR         shift, and go to state 7
    CPL         shift, and go to state 8
    DA          shift, and go to state 9
    DEC         shift, and go to state 10
    DIV         shift, and go to state 11
    DJNZ        shift, and go to state 12
    INC         shift, and go to state 13
    JB          shift, and go to state 14
    JBC         shift, and go to state 15
    JC          shift, and go to state 16
    JMP         shift, and go to state 17
    JNB         shift, and go to state 18
    JNC         shift, and go to state 19
    JNZ         shift, and go to state 20
    JZ          shift, and go to state 21
    LCALL       shift, and go to state 22
    LJMP        shift, and go to state 23
    MOV         shift, and go to state 24
    MOVC        shift, and go to state 25
    MUL         shift, and go to state 26
    NOP         shift, and go to state 27
    ORL         shift, and go to state 28
    POP         shift, and go to state 29
    PUSH        shift, and go to state 30
    RET         shift, and go to state 31
    RETI        shift, and go to state 32
    RL          shift, and go to state 33
    RLC         shift, and go to state 34
    RR          shift, and go to state 35
    RRC         shift, and go to state 36
    SETB        shift, and go to state 37
    SJMP        shift, and go to state 38
    SUBB        shift, and go to state 39
    SWAP        shift, and go to state 40
    XCH         shift, and go to state 41
    XCHD        shift, and go to state 42
    XRL         shift, and go to state 43
    SEG         shift, and go to state 44
    ALIGN       shift, and go to state 45
    EVEN        shift, and go to state 46
    ORG         shift, and go to state 47
    DB          shift, and go to state 48
    DD          shift, and go to state 49
    DW          shift, and go to state 50
    DS          shift, and go to state 51
    END         shift, and go to state 52
    IDENTIFIER  shift, and go to state 53

    stmt         go to state 201
    direct_stmt  go to state 56
    inst_stmt    go to state 57
    acall_stmt   go to state 58
    add_stmt     go to state 59
    addc_stmt    go to state 60
    ajmp_stmt    go to state 61
    anl_stmt     go to state 62
    cjne_stmt    go to state 63
    clr_stmt     go to state 64
    cpl_stmt     go to state 65
    da_stmt      go to state 66
    dec_stmt     go to state 67
    div_stmt     go to state 68
    djnz_stmt    go to state 69
    inc_stmt     go to state 70
    jb_stmt      go to state 71
    jbc_stmt     go to state 72
    jc_stmt      go to state 73
    jmp_stmt     go to state 74
    jnb_stmt     go to state 75
    jnc_stmt     go to state 76
    jnz_stmt     go to state 77
    jz_stmt      go to state 78
    lcall_stmt   go to state 79
    ljmp_stmt    go to state 80
    mov_stmt     go to state 81
    movc_stmt    go to state 82
    mul_stmt     go to state 83
    nop_stmt     go to state 84
    orl_stmt     go to state 85
    pop_stmt     go to state 86
    push_stmt    go to state 87
    ret_stmt     go to state 88
    reti_stmt    go to state 89
    rl_stmt      go to state 90
    rlc_stmt     go to state 91
    rr_stmt      go to state 92
    rrc_stmt     go to state 93
    setb_stmt    go to state 94
    sjmp_stmt    go to state 95
    subb_stmt    go to state 96
    swap_stmt    go to state 97
    xch_stmt     go to state 98
    xchd_stmt    go to state 99
    xrl_stmt     go to state 100
    res_stmt     go to state 101
    init_stmt    go to state 102
    seg_stmt     go to state 103
    end_stmt     go to state 104
    label        go to state 105
    org          go to state 106
    align        go to state 107
    even         go to state 108
    equ          go to state 109


State 55

    1 stmt_seq: stmt â¢

    $default  reduce using rule 1 (stmt_seq)


State 56

    4 stmt: direct_stmt â¢

    $default  reduce using rule 4 (stmt)


State 57

    3 stmt: inst_stmt â¢

    $default  reduce using rule 3 (stmt)


State 58

   14 inst_stmt: acall_stmt â¢

    $default  reduce using rule 14 (inst_stmt)


State 59

   15 inst_stmt: add_stmt â¢

    $default  reduce using rule 15 (inst_stmt)


State 60

   16 inst_stmt: addc_stmt â¢

    $default  reduce using rule 16 (inst_stmt)


State 61

   17 inst_stmt: ajmp_stmt â¢

    $default  reduce using rule 17 (inst_stmt)


State 62

   18 inst_stmt: anl_stmt â¢

    $default  reduce using rule 18 (inst_stmt)


State 63

   19 inst_stmt: cjne_stmt â¢

    $default  reduce using rule 19 (inst_stmt)


State 64

   20 inst_stmt: clr_stmt â¢

    $default  reduce using rule 20 (inst_stmt)


State 65

   21 inst_stmt: cpl_stmt â¢

    $default  reduce using rule 21 (inst_stmt)


State 66

   22 inst_stmt: da_stmt â¢

    $default  reduce using rule 22 (inst_stmt)


State 67

   23 inst_stmt: dec_stmt â¢

    $default  reduce using rule 23 (inst_stmt)


State 68

   24 inst_stmt: div_stmt â¢

    $default  reduce using rule 24 (inst_stmt)


State 69

   25 inst_stmt: djnz_stmt â¢

    $default  reduce using rule 25 (inst_stmt)


State 70

   26 inst_stmt: inc_stmt â¢

    $default  reduce using rule 26 (inst_stmt)


State 71

   27 inst_stmt: jb_stmt â¢

    $default  reduce using rule 27 (inst_stmt)


State 72

   28 inst_stmt: jbc_stmt â¢

    $default  reduce using rule 28 (inst_stmt)


State 73

   29 inst_stmt: jc_stmt â¢

    $default  reduce using rule 29 (inst_stmt)


State 74

   30 inst_stmt: jmp_stmt â¢

    $default  reduce using rule 30 (inst_stmt)


State 75

   31 inst_stmt: jnb_stmt â¢

    $default  reduce using rule 31 (inst_stmt)


State 76

   32 inst_stmt: jnc_stmt â¢

    $default  reduce using rule 32 (inst_stmt)


State 77

   33 inst_stmt: jnz_stmt â¢

    $default  reduce using rule 33 (inst_stmt)


State 78

   34 inst_stmt: jz_stmt â¢

    $default  reduce using rule 34 (inst_stmt)


State 79

   35 inst_stmt: lcall_stmt â¢

    $default  reduce using rule 35 (inst_stmt)


State 80

   36 inst_stmt: ljmp_stmt â¢

    $default  reduce using rule 36 (inst_stmt)


State 81

   55 inst_stmt: mov_stmt â¢

    $default  reduce using rule 55 (inst_stmt)


State 82

   56 inst_stmt: movc_stmt â¢

    $default  reduce using rule 56 (inst_stmt)


State 83

   37 inst_stmt: mul_stmt â¢

    $default  reduce using rule 37 (inst_stmt)


State 84

   38 inst_stmt: nop_stmt â¢

    $default  reduce using rule 38 (inst_stmt)


State 85

   39 inst_stmt: orl_stmt â¢

    $default  reduce using rule 39 (inst_stmt)


State 86

   40 inst_stmt: pop_stmt â¢

    $default  reduce using rule 40 (inst_stmt)


State 87

   41 inst_stmt: push_stmt â¢

    $default  reduce using rule 41 (inst_stmt)


State 88

   42 inst_stmt: ret_stmt â¢

    $default  reduce using rule 42 (inst_stmt)


State 89

   43 inst_stmt: reti_stmt â¢

    $default  reduce using rule 43 (inst_stmt)


State 90

   44 inst_stmt: rl_stmt â¢

    $default  reduce using rule 44 (inst_stmt)


State 91

   45 inst_stmt: rlc_stmt â¢

    $default  reduce using rule 45 (inst_stmt)


State 92

   46 inst_stmt: rr_stmt â¢

    $default  reduce using rule 46 (inst_stmt)


State 93

   47 inst_stmt: rrc_stmt â¢

    $default  reduce using rule 47 (inst_stmt)


State 94

   48 inst_stmt: setb_stmt â¢

    $default  reduce using rule 48 (inst_stmt)


State 95

   49 inst_stmt: sjmp_stmt â¢

    $default  reduce using rule 49 (inst_stmt)


State 96

   50 inst_stmt: subb_stmt â¢

    $default  reduce using rule 50 (inst_stmt)


State 97

   51 inst_stmt: swap_stmt â¢

    $default  reduce using rule 51 (inst_stmt)


State 98

   52 inst_stmt: xch_stmt â¢

    $default  reduce using rule 52 (inst_stmt)


State 99

   53 inst_stmt: xchd_stmt â¢

    $default  reduce using rule 53 (inst_stmt)


State 100

   54 inst_stmt: xrl_stmt â¢

    $default  reduce using rule 54 (inst_stmt)


State 101

   11 direct_stmt: res_stmt â¢

    $default  reduce using rule 11 (direct_stmt)


State 102

   12 direct_stmt: init_stmt â¢

    $default  reduce using rule 12 (direct_stmt)


State 103

   10 direct_stmt: seg_stmt â¢

    $default  reduce using rule 10 (direct_stmt)


State 104

   13 direct_stmt: end_stmt â¢

    $default  reduce using rule 13 (direct_stmt)


State 105

    5 direct_stmt: label â¢

    $default  reduce using rule 5 (direct_stmt)


State 106

    6 direct_stmt: org â¢

    $default  reduce using rule 6 (direct_stmt)


State 107

    7 direct_stmt: align â¢

    $default  reduce using rule 7 (direct_stmt)


State 108

    8 direct_stmt: even â¢

    $default  reduce using rule 8 (direct_stmt)


State 109

    9 direct_stmt: equ â¢

    $default  reduce using rule 9 (direct_stmt)


State 110

   57 acall_stmt: ACALL IDENTIFIER â¢

    $default  reduce using rule 57 (acall_stmt)


State 111

   58 add_stmt: ADD A â¢ COMMA REG
   59         | ADD A â¢ COMMA dir
   60         | ADD A â¢ COMMA AT_SIGN REG
   61         | ADD A â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 202


State 112

   62 addc_stmt: ADDC A â¢ COMMA REG
   63          | ADDC A â¢ COMMA dir
   64          | ADDC A â¢ COMMA AT_SIGN REG
   65          | ADDC A â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 203


State 113

   66 ajmp_stmt: AJMP IDENTIFIER â¢

    $default  reduce using rule 66 (ajmp_stmt)


State 114

  200 factor: error â¢

    $default  reduce using rule 200 (factor)


State 115

   67 anl_stmt: ANL A â¢ COMMA REG
   68         | ANL A â¢ COMMA dir
   69         | ANL A â¢ COMMA AT_SIGN REG
   70         | ANL A â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 204


State 116

   73 anl_stmt: ANL C â¢ COMMA bit
   74         | ANL C â¢ COMMA DIVISION bit

    COMMA  shift, and go to state 205


State 117

  202 dir: B â¢

    $default  reduce using rule 202 (dir)


State 118

  201 dir: SFR â¢

    $default  reduce using rule 201 (dir)


State 119

  198 factor: NUMBER â¢

    $default  reduce using rule 198 (factor)


State 120

  197 factor: OP_PAR â¢ exp CL_PAR

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 206
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 121

  199 factor: IDENTIFIER â¢

    $default  reduce using rule 199 (factor)


State 122

  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp
  203 dir: exp â¢

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 203 (dir)


State 123

  187 exp: simple_exp â¢
  188 simple_exp: simple_exp â¢ SUM term
  189           | simple_exp â¢ MINUS term

    SUM    shift, and go to state 210
    MINUS  shift, and go to state 211

    $default  reduce using rule 187 (exp)


State 124

  190 simple_exp: term â¢
  191 term: term â¢ MULTIPLY factor
  192     | term â¢ DIVISION factor
  193     | term â¢ MODULE factor
  194     | term â¢ SHIFT_R factor
  195     | term â¢ SHIFT_L factor

    MULTIPLY  shift, and go to state 212
    MODULE    shift, and go to state 213
    DIVISION  shift, and go to state 214
    SHIFT_L   shift, and go to state 215
    SHIFT_R   shift, and go to state 216

    $default  reduce using rule 190 (simple_exp)


State 125

  196 term: factor â¢

    $default  reduce using rule 196 (term)


State 126

   71 anl_stmt: ANL dir â¢ COMMA A
   72         | ANL dir â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 217


State 127

   77 cjne_stmt: CJNE REG â¢ COMMA HASH_TAG exp COMMA IDENTIFIER

    COMMA  shift, and go to state 218


State 128

   75 cjne_stmt: CJNE A â¢ COMMA dir COMMA IDENTIFIER
   76          | CJNE A â¢ COMMA HASH_TAG exp COMMA IDENTIFIER

    COMMA  shift, and go to state 219


State 129

   78 cjne_stmt: CJNE AT_SIGN â¢ REG COMMA HASH_TAG exp COMMA IDENTIFIER

    REG  shift, and go to state 220


State 130

   79 clr_stmt: CLR A â¢

    $default  reduce using rule 79 (clr_stmt)


State 131

   80 clr_stmt: CLR C â¢

    $default  reduce using rule 80 (clr_stmt)


State 132

  204 bit: RAM_BIT_ADDRESS â¢

    $default  reduce using rule 204 (bit)


State 133

  205 bit: SFR_BIT_ADDRESS â¢

    $default  reduce using rule 205 (bit)


State 134

   81 clr_stmt: CLR bit â¢

    $default  reduce using rule 81 (clr_stmt)


State 135

   82 cpl_stmt: CPL A â¢

    $default  reduce using rule 82 (cpl_stmt)


State 136

   83 cpl_stmt: CPL C â¢

    $default  reduce using rule 83 (cpl_stmt)


State 137

   84 cpl_stmt: CPL bit â¢

    $default  reduce using rule 84 (cpl_stmt)


State 138

   85 da_stmt: DA A â¢

    $default  reduce using rule 85 (da_stmt)


State 139

   87 dec_stmt: DEC REG â¢

    $default  reduce using rule 87 (dec_stmt)


State 140

   86 dec_stmt: DEC A â¢

    $default  reduce using rule 86 (dec_stmt)


State 141

   89 dec_stmt: DEC AT_SIGN â¢ REG

    REG  shift, and go to state 221


State 142

   88 dec_stmt: DEC dir â¢

    $default  reduce using rule 88 (dec_stmt)


State 143

   90 div_stmt: DIV AB â¢

    $default  reduce using rule 90 (div_stmt)


State 144

   91 djnz_stmt: DJNZ REG â¢ COMMA IDENTIFIER

    COMMA  shift, and go to state 222


State 145

   92 djnz_stmt: DJNZ dir â¢ COMMA IDENTIFIER

    COMMA  shift, and go to state 223


State 146

   94 inc_stmt: INC REG â¢

    $default  reduce using rule 94 (inc_stmt)


State 147

   93 inc_stmt: INC A â¢

    $default  reduce using rule 93 (inc_stmt)


State 148

   97 inc_stmt: INC DPTR â¢

    $default  reduce using rule 97 (inc_stmt)


State 149

   96 inc_stmt: INC AT_SIGN â¢ REG

    REG  shift, and go to state 224


State 150

   95 inc_stmt: INC dir â¢

    $default  reduce using rule 95 (inc_stmt)


State 151

   98 jb_stmt: JB bit â¢ COMMA IDENTIFIER

    COMMA  shift, and go to state 225


State 152

   99 jbc_stmt: JBC bit â¢ COMMA IDENTIFIER

    COMMA  shift, and go to state 226


State 153

  100 jc_stmt: JC IDENTIFIER â¢

    $default  reduce using rule 100 (jc_stmt)


State 154

  101 jmp_stmt: JMP AT_SIGN â¢ A SUM DPTR

    A  shift, and go to state 227


State 155

  102 jnb_stmt: JNB bit â¢ COMMA IDENTIFIER

    COMMA  shift, and go to state 228


State 156

  103 jnc_stmt: JNC IDENTIFIER â¢

    $default  reduce using rule 103 (jnc_stmt)


State 157

  104 jnz_stmt: JNZ IDENTIFIER â¢

    $default  reduce using rule 104 (jnz_stmt)


State 158

  105 jz_stmt: JZ IDENTIFIER â¢

    $default  reduce using rule 105 (jz_stmt)


State 159

  106 lcall_stmt: LCALL IDENTIFIER â¢

    $default  reduce using rule 106 (lcall_stmt)


State 160

  107 ljmp_stmt: LJMP IDENTIFIER â¢

    $default  reduce using rule 107 (ljmp_stmt)


State 161

  112 mov_stmt: MOV REG â¢ COMMA A
  113         | MOV REG â¢ COMMA dir
  114         | MOV REG â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 229


State 162

  108 mov_stmt: MOV A â¢ COMMA REG
  109         | MOV A â¢ COMMA dir
  110         | MOV A â¢ COMMA AT_SIGN REG
  111         | MOV A â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 230


State 163

  123 mov_stmt: MOV C â¢ COMMA bit

    COMMA  shift, and go to state 231


State 164

  125 mov_stmt: MOV DPTR â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 232


State 165

  120 mov_stmt: MOV AT_SIGN â¢ REG COMMA A
  121         | MOV AT_SIGN â¢ REG COMMA dir
  122         | MOV AT_SIGN â¢ REG COMMA HASH_TAG exp

    REG  shift, and go to state 233


State 166

  115 mov_stmt: MOV dir â¢ COMMA A
  116         | MOV dir â¢ COMMA REG
  117         | MOV dir â¢ COMMA dir
  118         | MOV dir â¢ COMMA AT_SIGN REG
  119         | MOV dir â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 234


State 167

  124 mov_stmt: MOV bit â¢ COMMA C

    COMMA  shift, and go to state 235


State 168

  126 movc_stmt: MOVC A â¢ COMMA AT_SIGN A SUM DPTR
  127          | MOVC A â¢ COMMA AT_SIGN A SUM PC

    COMMA  shift, and go to state 236


State 169

  128 mul_stmt: MUL AB â¢

    $default  reduce using rule 128 (mul_stmt)


State 170

  130 orl_stmt: ORL A â¢ COMMA REG
  131         | ORL A â¢ COMMA dir
  132         | ORL A â¢ COMMA AT_SIGN REG
  133         | ORL A â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 237


State 171

  136 orl_stmt: ORL C â¢ COMMA bit
  137         | ORL C â¢ COMMA DIVISION bit

    COMMA  shift, and go to state 238


State 172

  134 orl_stmt: ORL dir â¢ COMMA A
  135         | ORL dir â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 239


State 173

  138 pop_stmt: POP dir â¢

    $default  reduce using rule 138 (pop_stmt)


State 174

  139 push_stmt: PUSH dir â¢

    $default  reduce using rule 139 (push_stmt)


State 175

  142 rl_stmt: RL A â¢

    $default  reduce using rule 142 (rl_stmt)


State 176

  143 rlc_stmt: RLC A â¢

    $default  reduce using rule 143 (rlc_stmt)


State 177

  144 rr_stmt: RR A â¢

    $default  reduce using rule 144 (rr_stmt)


State 178

  145 rrc_stmt: RRC A â¢

    $default  reduce using rule 145 (rrc_stmt)


State 179

  146 setb_stmt: SETB C â¢

    $default  reduce using rule 146 (setb_stmt)


State 180

  147 setb_stmt: SETB bit â¢

    $default  reduce using rule 147 (setb_stmt)


State 181

  148 sjmp_stmt: SJMP IDENTIFIER â¢

    $default  reduce using rule 148 (sjmp_stmt)


State 182

  149 subb_stmt: SUBB A â¢ COMMA REG
  150          | SUBB A â¢ COMMA dir
  151          | SUBB A â¢ COMMA AT_SIGN REG
  152          | SUBB A â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 240


State 183

  153 swap_stmt: SWAP A â¢

    $default  reduce using rule 153 (swap_stmt)


State 184

  154 xch_stmt: XCH A â¢ COMMA REG
  155         | XCH A â¢ COMMA dir
  156         | XCH A â¢ COMMA AT_SIGN REG

    COMMA  shift, and go to state 241


State 185

  157 xchd_stmt: XCHD A â¢ COMMA AT_SIGN REG

    COMMA  shift, and go to state 242


State 186

  158 xrl_stmt: XRL A â¢ COMMA REG
  159         | XRL A â¢ COMMA dir
  160         | XRL A â¢ COMMA AT_SIGN REG
  161         | XRL A â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 243


State 187

  162 xrl_stmt: XRL dir â¢ COMMA A
  163         | XRL dir â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 244


State 188

  174 seg_stmt: SEG AT â¢ NUMBER
  175         | SEG AT â¢ RAM_BIT_ADDRESS

    NUMBER           shift, and go to state 245
    RAM_BIT_ADDRESS  shift, and go to state 246


State 189

  180 align: ALIGN exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 180 (align)


State 190

  179 org: ORG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 179 (org)


State 191

  171 init_el: STRING â¢

    $default  reduce using rule 171 (init_el)


State 192

  172 init_el: NUMBER â¢

    $default  reduce using rule 172 (init_el)


State 193

  166 init_stmt: DB init_seq â¢
  170 init_seq: init_seq â¢ COMMA init_el

    COMMA  shift, and go to state 247

    $default  reduce using rule 166 (init_stmt)


State 194

  169 init_seq: init_el â¢

    $default  reduce using rule 169 (init_seq)


State 195

  168 init_stmt: DD init_seq â¢
  170 init_seq: init_seq â¢ COMMA init_el

    COMMA  shift, and go to state 247

    $default  reduce using rule 168 (init_stmt)


State 196

  167 init_stmt: DW init_seq â¢
  170 init_seq: init_seq â¢ COMMA init_el

    COMMA  shift, and go to state 247

    $default  reduce using rule 167 (init_stmt)


State 197

  165 res_stmt: DS exp â¢ $@1 DBIT exp
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 164 ($@1)

    $@1  go to state 248


State 198

  177 label: IDENTIFIER TWO_DOTS â¢
  178      | IDENTIFIER TWO_DOTS â¢ seg_stmt

    SEG  shift, and go to state 44

    SEG       [reduce using rule 177 (label)]
    $default  reduce using rule 177 (label)

    seg_stmt  go to state 249


State 199

  182 equ: IDENTIFIER EQU â¢ exp
  183    | IDENTIFIER EQU â¢ SFR

    error       shift, and go to state 114
    SFR         shift, and go to state 250
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 251
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 200

    0 $accept: stmt_seq $end â¢

    $default  accept


State 201

    2 stmt_seq: stmt_seq stmt â¢

    $default  reduce using rule 2 (stmt_seq)


State 202

   58 add_stmt: ADD A COMMA â¢ REG
   59         | ADD A COMMA â¢ dir
   60         | ADD A COMMA â¢ AT_SIGN REG
   61         | ADD A COMMA â¢ HASH_TAG exp

    error       shift, and go to state 114
    REG         shift, and go to state 252
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 253
    AT_SIGN     shift, and go to state 254
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 255


State 203

   62 addc_stmt: ADDC A COMMA â¢ REG
   63          | ADDC A COMMA â¢ dir
   64          | ADDC A COMMA â¢ AT_SIGN REG
   65          | ADDC A COMMA â¢ HASH_TAG exp

    error       shift, and go to state 114
    REG         shift, and go to state 256
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 257
    AT_SIGN     shift, and go to state 258
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 259


State 204

   67 anl_stmt: ANL A COMMA â¢ REG
   68         | ANL A COMMA â¢ dir
   69         | ANL A COMMA â¢ AT_SIGN REG
   70         | ANL A COMMA â¢ HASH_TAG exp

    error       shift, and go to state 114
    REG         shift, and go to state 260
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 261
    AT_SIGN     shift, and go to state 262
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 263


State 205

   73 anl_stmt: ANL C COMMA â¢ bit
   74         | ANL C COMMA â¢ DIVISION bit

    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133
    DIVISION         shift, and go to state 264

    bit  go to state 265


State 206

  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp
  197 factor: OP_PAR exp â¢ CL_PAR

    EQ      shift, and go to state 207
    LT      shift, and go to state 208
    MT      shift, and go to state 209
    CL_PAR  shift, and go to state 266


State 207

  186 exp: exp EQ â¢ simple_exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    simple_exp  go to state 267
    term        go to state 124
    factor      go to state 125


State 208

  184 exp: exp LT â¢ simple_exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    simple_exp  go to state 268
    term        go to state 124
    factor      go to state 125


State 209

  185 exp: exp MT â¢ simple_exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    simple_exp  go to state 269
    term        go to state 124
    factor      go to state 125


State 210

  188 simple_exp: simple_exp SUM â¢ term

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    term    go to state 270
    factor  go to state 125


State 211

  189 simple_exp: simple_exp MINUS â¢ term

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    term    go to state 271
    factor  go to state 125


State 212

  191 term: term MULTIPLY â¢ factor

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    factor  go to state 272


State 213

  193 term: term MODULE â¢ factor

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    factor  go to state 273


State 214

  192 term: term DIVISION â¢ factor

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    factor  go to state 274


State 215

  195 term: term SHIFT_L â¢ factor

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    factor  go to state 275


State 216

  194 term: term SHIFT_R â¢ factor

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    factor  go to state 276


State 217

   71 anl_stmt: ANL dir COMMA â¢ A
   72         | ANL dir COMMA â¢ HASH_TAG exp

    A         shift, and go to state 277
    HASH_TAG  shift, and go to state 278


State 218

   77 cjne_stmt: CJNE REG COMMA â¢ HASH_TAG exp COMMA IDENTIFIER

    HASH_TAG  shift, and go to state 279


State 219

   75 cjne_stmt: CJNE A COMMA â¢ dir COMMA IDENTIFIER
   76          | CJNE A COMMA â¢ HASH_TAG exp COMMA IDENTIFIER

    error       shift, and go to state 114
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 280
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 281


State 220

   78 cjne_stmt: CJNE AT_SIGN REG â¢ COMMA HASH_TAG exp COMMA IDENTIFIER

    COMMA  shift, and go to state 282


State 221

   89 dec_stmt: DEC AT_SIGN REG â¢

    $default  reduce using rule 89 (dec_stmt)


State 222

   91 djnz_stmt: DJNZ REG COMMA â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 283


State 223

   92 djnz_stmt: DJNZ dir COMMA â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 284


State 224

   96 inc_stmt: INC AT_SIGN REG â¢

    $default  reduce using rule 96 (inc_stmt)


State 225

   98 jb_stmt: JB bit COMMA â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 285


State 226

   99 jbc_stmt: JBC bit COMMA â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 286


State 227

  101 jmp_stmt: JMP AT_SIGN A â¢ SUM DPTR

    SUM  shift, and go to state 287


State 228

  102 jnb_stmt: JNB bit COMMA â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 288


State 229

  112 mov_stmt: MOV REG COMMA â¢ A
  113         | MOV REG COMMA â¢ dir
  114         | MOV REG COMMA â¢ HASH_TAG exp

    error       shift, and go to state 114
    A           shift, and go to state 289
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 290
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 291


State 230

  108 mov_stmt: MOV A COMMA â¢ REG
  109         | MOV A COMMA â¢ dir
  110         | MOV A COMMA â¢ AT_SIGN REG
  111         | MOV A COMMA â¢ HASH_TAG exp

    error       shift, and go to state 114
    REG         shift, and go to state 292
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 293
    AT_SIGN     shift, and go to state 294
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 295


State 231

  123 mov_stmt: MOV C COMMA â¢ bit

    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133

    bit  go to state 296


State 232

  125 mov_stmt: MOV DPTR COMMA â¢ HASH_TAG exp

    HASH_TAG  shift, and go to state 297


State 233

  120 mov_stmt: MOV AT_SIGN REG â¢ COMMA A
  121         | MOV AT_SIGN REG â¢ COMMA dir
  122         | MOV AT_SIGN REG â¢ COMMA HASH_TAG exp

    COMMA  shift, and go to state 298


State 234

  115 mov_stmt: MOV dir COMMA â¢ A
  116         | MOV dir COMMA â¢ REG
  117         | MOV dir COMMA â¢ dir
  118         | MOV dir COMMA â¢ AT_SIGN REG
  119         | MOV dir COMMA â¢ HASH_TAG exp

    error       shift, and go to state 114
    REG         shift, and go to state 299
    A           shift, and go to state 300
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 301
    AT_SIGN     shift, and go to state 302
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 303


State 235

  124 mov_stmt: MOV bit COMMA â¢ C

    C  shift, and go to state 304


State 236

  126 movc_stmt: MOVC A COMMA â¢ AT_SIGN A SUM DPTR
  127          | MOVC A COMMA â¢ AT_SIGN A SUM PC

    AT_SIGN  shift, and go to state 305


State 237

  130 orl_stmt: ORL A COMMA â¢ REG
  131         | ORL A COMMA â¢ dir
  132         | ORL A COMMA â¢ AT_SIGN REG
  133         | ORL A COMMA â¢ HASH_TAG exp

    error       shift, and go to state 114
    REG         shift, and go to state 306
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 307
    AT_SIGN     shift, and go to state 308
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 309


State 238

  136 orl_stmt: ORL C COMMA â¢ bit
  137         | ORL C COMMA â¢ DIVISION bit

    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133
    DIVISION         shift, and go to state 310

    bit  go to state 311


State 239

  134 orl_stmt: ORL dir COMMA â¢ A
  135         | ORL dir COMMA â¢ HASH_TAG exp

    A         shift, and go to state 312
    HASH_TAG  shift, and go to state 313


State 240

  149 subb_stmt: SUBB A COMMA â¢ REG
  150          | SUBB A COMMA â¢ dir
  151          | SUBB A COMMA â¢ AT_SIGN REG
  152          | SUBB A COMMA â¢ HASH_TAG exp

    error       shift, and go to state 114
    REG         shift, and go to state 314
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 315
    AT_SIGN     shift, and go to state 316
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 317


State 241

  154 xch_stmt: XCH A COMMA â¢ REG
  155         | XCH A COMMA â¢ dir
  156         | XCH A COMMA â¢ AT_SIGN REG

    error       shift, and go to state 114
    REG         shift, and go to state 318
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    AT_SIGN     shift, and go to state 319
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 320


State 242

  157 xchd_stmt: XCHD A COMMA â¢ AT_SIGN REG

    AT_SIGN  shift, and go to state 321


State 243

  158 xrl_stmt: XRL A COMMA â¢ REG
  159         | XRL A COMMA â¢ dir
  160         | XRL A COMMA â¢ AT_SIGN REG
  161         | XRL A COMMA â¢ HASH_TAG exp

    error       shift, and go to state 114
    REG         shift, and go to state 322
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 323
    AT_SIGN     shift, and go to state 324
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 325


State 244

  162 xrl_stmt: XRL dir COMMA â¢ A
  163         | XRL dir COMMA â¢ HASH_TAG exp

    A         shift, and go to state 326
    HASH_TAG  shift, and go to state 327


State 245

  174 seg_stmt: SEG AT NUMBER â¢

    $default  reduce using rule 174 (seg_stmt)


State 246

  175 seg_stmt: SEG AT RAM_BIT_ADDRESS â¢

    $default  reduce using rule 175 (seg_stmt)


State 247

  170 init_seq: init_seq COMMA â¢ init_el

    STRING  shift, and go to state 191
    NUMBER  shift, and go to state 192

    init_el  go to state 328


State 248

  165 res_stmt: DS exp $@1 â¢ DBIT exp

    DBIT  shift, and go to state 329


State 249

  178 label: IDENTIFIER TWO_DOTS seg_stmt â¢

    $default  reduce using rule 178 (label)


State 250

  183 equ: IDENTIFIER EQU SFR â¢

    $default  reduce using rule 183 (equ)


State 251

  182 equ: IDENTIFIER EQU exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 182 (equ)


State 252

   58 add_stmt: ADD A COMMA REG â¢

    $default  reduce using rule 58 (add_stmt)


State 253

   61 add_stmt: ADD A COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 330
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 254

   60 add_stmt: ADD A COMMA AT_SIGN â¢ REG

    REG  shift, and go to state 331


State 255

   59 add_stmt: ADD A COMMA dir â¢

    $default  reduce using rule 59 (add_stmt)


State 256

   62 addc_stmt: ADDC A COMMA REG â¢

    $default  reduce using rule 62 (addc_stmt)


State 257

   65 addc_stmt: ADDC A COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 332
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 258

   64 addc_stmt: ADDC A COMMA AT_SIGN â¢ REG

    REG  shift, and go to state 333


State 259

   63 addc_stmt: ADDC A COMMA dir â¢

    $default  reduce using rule 63 (addc_stmt)


State 260

   67 anl_stmt: ANL A COMMA REG â¢

    $default  reduce using rule 67 (anl_stmt)


State 261

   70 anl_stmt: ANL A COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 334
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 262

   69 anl_stmt: ANL A COMMA AT_SIGN â¢ REG

    REG  shift, and go to state 335


State 263

   68 anl_stmt: ANL A COMMA dir â¢

    $default  reduce using rule 68 (anl_stmt)


State 264

   74 anl_stmt: ANL C COMMA DIVISION â¢ bit

    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133

    bit  go to state 336


State 265

   73 anl_stmt: ANL C COMMA bit â¢

    $default  reduce using rule 73 (anl_stmt)


State 266

  197 factor: OP_PAR exp CL_PAR â¢

    $default  reduce using rule 197 (factor)


State 267

  186 exp: exp EQ simple_exp â¢
  188 simple_exp: simple_exp â¢ SUM term
  189           | simple_exp â¢ MINUS term

    SUM    shift, and go to state 210
    MINUS  shift, and go to state 211

    $default  reduce using rule 186 (exp)


State 268

  184 exp: exp LT simple_exp â¢
  188 simple_exp: simple_exp â¢ SUM term
  189           | simple_exp â¢ MINUS term

    SUM    shift, and go to state 210
    MINUS  shift, and go to state 211

    $default  reduce using rule 184 (exp)


State 269

  185 exp: exp MT simple_exp â¢
  188 simple_exp: simple_exp â¢ SUM term
  189           | simple_exp â¢ MINUS term

    SUM    shift, and go to state 210
    MINUS  shift, and go to state 211

    $default  reduce using rule 185 (exp)


State 270

  188 simple_exp: simple_exp SUM term â¢
  191 term: term â¢ MULTIPLY factor
  192     | term â¢ DIVISION factor
  193     | term â¢ MODULE factor
  194     | term â¢ SHIFT_R factor
  195     | term â¢ SHIFT_L factor

    MULTIPLY  shift, and go to state 212
    MODULE    shift, and go to state 213
    DIVISION  shift, and go to state 214
    SHIFT_L   shift, and go to state 215
    SHIFT_R   shift, and go to state 216

    $default  reduce using rule 188 (simple_exp)


State 271

  189 simple_exp: simple_exp MINUS term â¢
  191 term: term â¢ MULTIPLY factor
  192     | term â¢ DIVISION factor
  193     | term â¢ MODULE factor
  194     | term â¢ SHIFT_R factor
  195     | term â¢ SHIFT_L factor

    MULTIPLY  shift, and go to state 212
    MODULE    shift, and go to state 213
    DIVISION  shift, and go to state 214
    SHIFT_L   shift, and go to state 215
    SHIFT_R   shift, and go to state 216

    $default  reduce using rule 189 (simple_exp)


State 272

  191 term: term MULTIPLY factor â¢

    $default  reduce using rule 191 (term)


State 273

  193 term: term MODULE factor â¢

    $default  reduce using rule 193 (term)


State 274

  192 term: term DIVISION factor â¢

    $default  reduce using rule 192 (term)


State 275

  195 term: term SHIFT_L factor â¢

    $default  reduce using rule 195 (term)


State 276

  194 term: term SHIFT_R factor â¢

    $default  reduce using rule 194 (term)


State 277

   71 anl_stmt: ANL dir COMMA A â¢

    $default  reduce using rule 71 (anl_stmt)


State 278

   72 anl_stmt: ANL dir COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 337
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 279

   77 cjne_stmt: CJNE REG COMMA HASH_TAG â¢ exp COMMA IDENTIFIER

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 338
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 280

   76 cjne_stmt: CJNE A COMMA HASH_TAG â¢ exp COMMA IDENTIFIER

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 339
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 281

   75 cjne_stmt: CJNE A COMMA dir â¢ COMMA IDENTIFIER

    COMMA  shift, and go to state 340


State 282

   78 cjne_stmt: CJNE AT_SIGN REG COMMA â¢ HASH_TAG exp COMMA IDENTIFIER

    HASH_TAG  shift, and go to state 341


State 283

   91 djnz_stmt: DJNZ REG COMMA IDENTIFIER â¢

    $default  reduce using rule 91 (djnz_stmt)


State 284

   92 djnz_stmt: DJNZ dir COMMA IDENTIFIER â¢

    $default  reduce using rule 92 (djnz_stmt)


State 285

   98 jb_stmt: JB bit COMMA IDENTIFIER â¢

    $default  reduce using rule 98 (jb_stmt)


State 286

   99 jbc_stmt: JBC bit COMMA IDENTIFIER â¢

    $default  reduce using rule 99 (jbc_stmt)


State 287

  101 jmp_stmt: JMP AT_SIGN A SUM â¢ DPTR

    DPTR  shift, and go to state 342


State 288

  102 jnb_stmt: JNB bit COMMA IDENTIFIER â¢

    $default  reduce using rule 102 (jnb_stmt)


State 289

  112 mov_stmt: MOV REG COMMA A â¢

    $default  reduce using rule 112 (mov_stmt)


State 290

  114 mov_stmt: MOV REG COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 343
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 291

  113 mov_stmt: MOV REG COMMA dir â¢

    $default  reduce using rule 113 (mov_stmt)


State 292

  108 mov_stmt: MOV A COMMA REG â¢

    $default  reduce using rule 108 (mov_stmt)


State 293

  111 mov_stmt: MOV A COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 344
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 294

  110 mov_stmt: MOV A COMMA AT_SIGN â¢ REG

    REG  shift, and go to state 345


State 295

  109 mov_stmt: MOV A COMMA dir â¢

    $default  reduce using rule 109 (mov_stmt)


State 296

  123 mov_stmt: MOV C COMMA bit â¢

    $default  reduce using rule 123 (mov_stmt)


State 297

  125 mov_stmt: MOV DPTR COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 346
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 298

  120 mov_stmt: MOV AT_SIGN REG COMMA â¢ A
  121         | MOV AT_SIGN REG COMMA â¢ dir
  122         | MOV AT_SIGN REG COMMA â¢ HASH_TAG exp

    error       shift, and go to state 114
    A           shift, and go to state 347
    B           shift, and go to state 117
    SFR         shift, and go to state 118
    NUMBER      shift, and go to state 119
    HASH_TAG    shift, and go to state 348
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 122
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125
    dir         go to state 349


State 299

  116 mov_stmt: MOV dir COMMA REG â¢

    $default  reduce using rule 116 (mov_stmt)


State 300

  115 mov_stmt: MOV dir COMMA A â¢

    $default  reduce using rule 115 (mov_stmt)


State 301

  119 mov_stmt: MOV dir COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 350
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 302

  118 mov_stmt: MOV dir COMMA AT_SIGN â¢ REG

    REG  shift, and go to state 351


State 303

  117 mov_stmt: MOV dir COMMA dir â¢

    $default  reduce using rule 117 (mov_stmt)


State 304

  124 mov_stmt: MOV bit COMMA C â¢

    $default  reduce using rule 124 (mov_stmt)


State 305

  126 movc_stmt: MOVC A COMMA AT_SIGN â¢ A SUM DPTR
  127          | MOVC A COMMA AT_SIGN â¢ A SUM PC

    A  shift, and go to state 352


State 306

  130 orl_stmt: ORL A COMMA REG â¢

    $default  reduce using rule 130 (orl_stmt)


State 307

  133 orl_stmt: ORL A COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 353
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 308

  132 orl_stmt: ORL A COMMA AT_SIGN â¢ REG

    REG  shift, and go to state 354


State 309

  131 orl_stmt: ORL A COMMA dir â¢

    $default  reduce using rule 131 (orl_stmt)


State 310

  137 orl_stmt: ORL C COMMA DIVISION â¢ bit

    RAM_BIT_ADDRESS  shift, and go to state 132
    SFR_BIT_ADDRESS  shift, and go to state 133

    bit  go to state 355


State 311

  136 orl_stmt: ORL C COMMA bit â¢

    $default  reduce using rule 136 (orl_stmt)


State 312

  134 orl_stmt: ORL dir COMMA A â¢

    $default  reduce using rule 134 (orl_stmt)


State 313

  135 orl_stmt: ORL dir COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 356
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 314

  149 subb_stmt: SUBB A COMMA REG â¢

    $default  reduce using rule 149 (subb_stmt)


State 315

  152 subb_stmt: SUBB A COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 357
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 316

  151 subb_stmt: SUBB A COMMA AT_SIGN â¢ REG

    REG  shift, and go to state 358


State 317

  150 subb_stmt: SUBB A COMMA dir â¢

    $default  reduce using rule 150 (subb_stmt)


State 318

  154 xch_stmt: XCH A COMMA REG â¢

    $default  reduce using rule 154 (xch_stmt)


State 319

  156 xch_stmt: XCH A COMMA AT_SIGN â¢ REG

    REG  shift, and go to state 359


State 320

  155 xch_stmt: XCH A COMMA dir â¢

    $default  reduce using rule 155 (xch_stmt)


State 321

  157 xchd_stmt: XCHD A COMMA AT_SIGN â¢ REG

    REG  shift, and go to state 360


State 322

  158 xrl_stmt: XRL A COMMA REG â¢

    $default  reduce using rule 158 (xrl_stmt)


State 323

  161 xrl_stmt: XRL A COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 361
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 324

  160 xrl_stmt: XRL A COMMA AT_SIGN â¢ REG

    REG  shift, and go to state 362


State 325

  159 xrl_stmt: XRL A COMMA dir â¢

    $default  reduce using rule 159 (xrl_stmt)


State 326

  162 xrl_stmt: XRL dir COMMA A â¢

    $default  reduce using rule 162 (xrl_stmt)


State 327

  163 xrl_stmt: XRL dir COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 363
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 328

  170 init_seq: init_seq COMMA init_el â¢

    $default  reduce using rule 170 (init_seq)


State 329

  165 res_stmt: DS exp $@1 DBIT â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 364
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 330

   61 add_stmt: ADD A COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 61 (add_stmt)


State 331

   60 add_stmt: ADD A COMMA AT_SIGN REG â¢

    $default  reduce using rule 60 (add_stmt)


State 332

   65 addc_stmt: ADDC A COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 65 (addc_stmt)


State 333

   64 addc_stmt: ADDC A COMMA AT_SIGN REG â¢

    $default  reduce using rule 64 (addc_stmt)


State 334

   70 anl_stmt: ANL A COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 70 (anl_stmt)


State 335

   69 anl_stmt: ANL A COMMA AT_SIGN REG â¢

    $default  reduce using rule 69 (anl_stmt)


State 336

   74 anl_stmt: ANL C COMMA DIVISION bit â¢

    $default  reduce using rule 74 (anl_stmt)


State 337

   72 anl_stmt: ANL dir COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 72 (anl_stmt)


State 338

   77 cjne_stmt: CJNE REG COMMA HASH_TAG exp â¢ COMMA IDENTIFIER
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    COMMA  shift, and go to state 365
    EQ     shift, and go to state 207
    LT     shift, and go to state 208
    MT     shift, and go to state 209


State 339

   76 cjne_stmt: CJNE A COMMA HASH_TAG exp â¢ COMMA IDENTIFIER
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    COMMA  shift, and go to state 366
    EQ     shift, and go to state 207
    LT     shift, and go to state 208
    MT     shift, and go to state 209


State 340

   75 cjne_stmt: CJNE A COMMA dir COMMA â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 367


State 341

   78 cjne_stmt: CJNE AT_SIGN REG COMMA HASH_TAG â¢ exp COMMA IDENTIFIER

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 368
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 342

  101 jmp_stmt: JMP AT_SIGN A SUM DPTR â¢

    $default  reduce using rule 101 (jmp_stmt)


State 343

  114 mov_stmt: MOV REG COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 114 (mov_stmt)


State 344

  111 mov_stmt: MOV A COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 111 (mov_stmt)


State 345

  110 mov_stmt: MOV A COMMA AT_SIGN REG â¢

    $default  reduce using rule 110 (mov_stmt)


State 346

  125 mov_stmt: MOV DPTR COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 125 (mov_stmt)


State 347

  120 mov_stmt: MOV AT_SIGN REG COMMA A â¢

    $default  reduce using rule 120 (mov_stmt)


State 348

  122 mov_stmt: MOV AT_SIGN REG COMMA HASH_TAG â¢ exp

    error       shift, and go to state 114
    NUMBER      shift, and go to state 119
    OP_PAR      shift, and go to state 120
    IDENTIFIER  shift, and go to state 121

    exp         go to state 369
    simple_exp  go to state 123
    term        go to state 124
    factor      go to state 125


State 349

  121 mov_stmt: MOV AT_SIGN REG COMMA dir â¢

    $default  reduce using rule 121 (mov_stmt)


State 350

  119 mov_stmt: MOV dir COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 119 (mov_stmt)


State 351

  118 mov_stmt: MOV dir COMMA AT_SIGN REG â¢

    $default  reduce using rule 118 (mov_stmt)


State 352

  126 movc_stmt: MOVC A COMMA AT_SIGN A â¢ SUM DPTR
  127          | MOVC A COMMA AT_SIGN A â¢ SUM PC

    SUM  shift, and go to state 370


State 353

  133 orl_stmt: ORL A COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 133 (orl_stmt)


State 354

  132 orl_stmt: ORL A COMMA AT_SIGN REG â¢

    $default  reduce using rule 132 (orl_stmt)


State 355

  137 orl_stmt: ORL C COMMA DIVISION bit â¢

    $default  reduce using rule 137 (orl_stmt)


State 356

  135 orl_stmt: ORL dir COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 135 (orl_stmt)


State 357

  152 subb_stmt: SUBB A COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 152 (subb_stmt)


State 358

  151 subb_stmt: SUBB A COMMA AT_SIGN REG â¢

    $default  reduce using rule 151 (subb_stmt)


State 359

  156 xch_stmt: XCH A COMMA AT_SIGN REG â¢

    $default  reduce using rule 156 (xch_stmt)


State 360

  157 xchd_stmt: XCHD A COMMA AT_SIGN REG â¢

    $default  reduce using rule 157 (xchd_stmt)


State 361

  161 xrl_stmt: XRL A COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 161 (xrl_stmt)


State 362

  160 xrl_stmt: XRL A COMMA AT_SIGN REG â¢

    $default  reduce using rule 160 (xrl_stmt)


State 363

  163 xrl_stmt: XRL dir COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 163 (xrl_stmt)


State 364

  165 res_stmt: DS exp $@1 DBIT exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 165 (res_stmt)


State 365

   77 cjne_stmt: CJNE REG COMMA HASH_TAG exp COMMA â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 371


State 366

   76 cjne_stmt: CJNE A COMMA HASH_TAG exp COMMA â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 372


State 367

   75 cjne_stmt: CJNE A COMMA dir COMMA IDENTIFIER â¢

    $default  reduce using rule 75 (cjne_stmt)


State 368

   78 cjne_stmt: CJNE AT_SIGN REG COMMA HASH_TAG exp â¢ COMMA IDENTIFIER
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    COMMA  shift, and go to state 373
    EQ     shift, and go to state 207
    LT     shift, and go to state 208
    MT     shift, and go to state 209


State 369

  122 mov_stmt: MOV AT_SIGN REG COMMA HASH_TAG exp â¢
  184 exp: exp â¢ LT simple_exp
  185    | exp â¢ MT simple_exp
  186    | exp â¢ EQ simple_exp

    EQ  shift, and go to state 207
    LT  shift, and go to state 208
    MT  shift, and go to state 209

    $default  reduce using rule 122 (mov_stmt)


State 370

  126 movc_stmt: MOVC A COMMA AT_SIGN A SUM â¢ DPTR
  127          | MOVC A COMMA AT_SIGN A SUM â¢ PC

    PC    shift, and go to state 374
    DPTR  shift, and go to state 375


State 371

   77 cjne_stmt: CJNE REG COMMA HASH_TAG exp COMMA IDENTIFIER â¢

    $default  reduce using rule 77 (cjne_stmt)


State 372

   76 cjne_stmt: CJNE A COMMA HASH_TAG exp COMMA IDENTIFIER â¢

    $default  reduce using rule 76 (cjne_stmt)


State 373

   78 cjne_stmt: CJNE AT_SIGN REG COMMA HASH_TAG exp COMMA â¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 376


State 374

  127 movc_stmt: MOVC A COMMA AT_SIGN A SUM PC â¢

    $default  reduce using rule 127 (movc_stmt)


State 375

  126 movc_stmt: MOVC A COMMA AT_SIGN A SUM DPTR â¢

    $default  reduce using rule 126 (movc_stmt)


State 376

   78 cjne_stmt: CJNE AT_SIGN REG COMMA HASH_TAG exp COMMA IDENTIFIER â¢

    $default  reduce using rule 78 (cjne_stmt)
